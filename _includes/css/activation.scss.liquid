{%- comment -%}
  Include as: {%- include css/activation.scss.liquid -%}
  Depends on: page.
  Results in: page-dependent CSS rules for inclusion in a style element,
    which needs to be disabled when JS is enabled.
  Includes: components/site_nav.html.
  Overwrites: 
    activation_no_nav_link,
    nav_list, nav_list_item, nav_list_link, nav_category_list,
    site_nav, nav_list_link_prefix, nav_splits, nav_split,
    nav_levels, nav_endless, nav_ends, nav_end_index, nav_index,
    activation_collection_prefix, activation_other_collection_prefix.
  Should not be cached, because it depends on page.
{%- endcomment -%}

{%- comment -%}
  The CSS rules in activation_no_nav_link are for use on pages excluded from the main navigation.
  - The first rule ensures that no nav-link has a background image.
  - The other two rules ensure that all folding collections are expanded.
{%- endcomment -%}

{%- capture activation_no_nav_link %}
.site-nav ul li a {
  background-image: none;
}

{%- if site.just_the_docs.collections %}
.site-nav > ul.nav-category-list > li > button svg {
  transform: rotate(-90deg);
}
.site-nav > ul.nav-category-list > li.nav-list-item > ul.nav-list {
  display: block;
}
{%- endif %}
{% endcapture -%}

{%- if page.title == nil or page.nav_exclude == true -%}

{{ activation_no_nav_link }}

{%- else -%}

{%- capture nav_list -%}
<ul class="nav-list
{%- endcapture -%}

{%- capture nav_list_item -%}
<li class="nav-list-item
{%- endcapture -%}

{%- capture nav_list_link -%}
<a href="{{ page.url | relative_url }}" class="nav-list-link">
{%- endcapture -%}

{%- capture nav_category_list -%}
<ul class="nav-list nav-category-list">
{%- endcapture -%}

{%- capture site_nav -%}
{%- include_cached components/site_nav.html -%}
{%- endcapture -%}

{%- assign nav_list_link_prefix =
      site_nav | split: nav_list_link | first | append: nav_list_link -%}

{%- assign nav_splits =
      nav_list_link_prefix | split: nav_list_item | pop -%}

{%- comment -%}
  The string before the first nav-list-item must contain a ul.nav-list tag.
  It could be for a list of ordinary pages, of external links, or a collection.
  
  The string after a nav-list-item is non-empty, and may contain:
  - a ul.nav-list tag (when the item is the first in a list) and/or
    one or more closing ul tags (when the item is preceded by a list)
  - a div.nav-category tag and a ul.nav-list tag (when the item is the first in
    a foldable collection)
  - neither of the above (when it is not the first item in a list).
  
  The extra list level due to foldable collections results in a superflous zero
  item in nav_levels, which needs to be discarded.
{%- endcomment %}

{%- assign nav_levels = "" | split: "" | push: 0 -%}

{%- for nav_split in nav_splits -%}

    {%- if nav_split contains "</ul>" -%}
      {%- assign nav_endless = nav_split | remove: "</ul>" -%}
      {%- assign nav_ends = nav_split.size | minus: nav_endless.size | divided_by: 5 -%}
      {% for nav_end_index in (1..nav_ends) %}
        {%- assign nav_levels = nav_levels | pop -%}
      {%- endfor -%}
    {%- endif -%}

    {%- if nav_split contains nav_list -%}
      {%- if nav_levels.size == 1 -%}
        {%- assign nav_index = nav_levels[0] | plus: 1 -%}
        {%- assign nav_levels = nav_levels | pop | push: nav_index -%}
      {%- endif -%}
      {%- if nav_split contains nav_category_list -%}
        {%- assign nav_levels = nav_levels | push: -1 -%}
      {%- else -%}
        {%- assign nav_levels = nav_levels | push: 0 -%}
      {%- endif -%}
    {%- endif -%}

    {%- assign nav_index = nav_levels[-1] | plus: 1 -%}
    {%- assign nav_levels = nav_levels | pop | push: nav_index -%}

{%- endfor -%}

{%- assign nav_levels = nav_levels | where_exp: "item", "item >= 1" -%}

{%- comment -%}
  The generated CSS depends on the position of the current page in each level in
  the navigation.
{%- endcomment -%}

{%- if nav_levels[1] == nil -%}

{{ activation_no_nav_link }}

{%- else -%}

{%- if nav_levels[2] == nil and nav_levels[3] -%}

{{ activation_no_nav_link }}

{%- else -%}

{%- comment -%}
  The site-nav is:
  - an optional ul.nav-list with li.nav-list-items for non-collection top-level pages
  - an optional ul.nav-list with li.nav-list-item.externals
  - any number of just-the-docs.collections
  
  A non-foldable collection is:
  - a div.nav-category with the collection name, followed by:
  - a ul.nav-list with li.nav-list-items for its top-level pages
  
  A foldable collection is:
  - a ul.nav-list.nav-category-list with a single li.nav-list-item containing:
    - an optional button with the expander svg
    - a div.nav-category with the collection name
    - a ul.nav-list with li.nav-list-items for its top-level pages
  
  The generated CSS uses:
  - activation_collection_prefix, to select the site-nav > ul.nav-list for the page
  - activation_other_collection_prefix, to select all the other site-nav > ul.nav-lists
{%- endcomment -%}

{%- if page.collection == nil -%}

  {%- capture activation_collection_prefix -%}
  .site-nav > ul.nav-list:first-child
  {%- endcapture -%}

  {%- capture activation_other_collection_prefix -%}
  .site-nav > ul.nav-list:not(:first-child)
  {%- endcapture -%}

{%- else -%}

  {%- capture activation_collection_prefix -%}
  .site-nav > ul:nth-of-type({{ nav_levels[0] }})
  {%- if site.just_the_docs.collections[page.collection].nav_fold %} > li > ul
  {%- endif -%}
  {%- endcapture -%}

  {%- capture activation_other_collection_prefix -%}
  .site-nav > ul:not(:nth-of-type({{ nav_levels[0] }}))
  {%- endcapture -%}

{%- endif -%}

{%- comment -%}
  The required background image of the link to the current page may involve SCSS.
  To avoid page-dependent SCSS, all nav links initially have that background image.
  The following rule removes the image from the links to all parents, siblings,
  and children of the current page.
{%- endcomment %}

{% if nav_levels[3] -%}

{{ activation_collection_prefix }} > li > a,
{{ activation_collection_prefix }} > li > ul > li > a,
{{ activation_collection_prefix }} > li > ul > li > ul > li:not(:nth-child({{ nav_levels[3] }})) > a {
  background-image: none;
}

{%- elsif nav_levels[2] -%}

{{ activation_collection_prefix }} > li > a,
{{ activation_collection_prefix }} > li > ul > li:not(:nth-child({{ nav_levels[2] }})) > a,
{{ activation_collection_prefix }} > li > ul > li > ul > li > a {
  background-image: none;
}

{%- else -%}

{{ activation_collection_prefix }} > li:not(:nth-child({{ nav_levels[1] }})) > a,
{{ activation_collection_prefix }} > li > ul > li > a,
{{ activation_collection_prefix }} > li > ul > li > ul > li > a {
  background-image: none;
}

{%- endif %}

{%- comment -%}
  The following rule removes the image from the links to pages in other collections.
{%- endcomment %}

{{ activation_other_collection_prefix }} a,
.site-nav li.external a {
  background-image: none;
}

{%- comment -%}
  The following rule styles the link to the current page.
{%- endcomment %}

{{ activation_collection_prefix }} > li:nth-child({{ nav_levels[1] }})
{%- if nav_levels[2] %} > ul > li:nth-child({{ nav_levels[2] }})
{%- if nav_levels[3] %} > ul > li:nth-child({{ nav_levels[3] }})
{%- endif -%}
{%- endif %} > a {
  font-weight: 600;
  text-decoration: none;
}

{%- comment -%}
  The following rules unfold all collections, and display the links to any children
  of the current page.
  
  To avoid dependence on the SCSS variable nav-list-expander-right, the direction
  of the rotation of the expander icon is fixed, and corresponds to the appearance
  when nav-list-expander-right is true. This results in a minor visual difference
  between the appearance of active expander icons when JS is enabled/disabled and
  nav-list-expander-right is false, which seems unavoidable.
{%- endcomment %}

{%- if site.just_the_docs.collections %}
.site-nav > ul.nav-category-list > li > button svg,
{% endif -%}
{{ activation_collection_prefix }} > li:nth-child({{ nav_levels[1] }}) > button svg
{%- if nav_levels[2] -%},
{{ activation_collection_prefix }} > li:nth-child({{ nav_levels[1] }}) > ul > li:nth-child({{ nav_levels[2] }}) > button svg
{%- endif %} {
  transform: rotate(-90deg);
}

{%- if site.just_the_docs.collections %}
.site-nav > ul.nav-category-list > li.nav-list-item > ul.nav-list,
{% endif -%}
{{ activation_collection_prefix }} > li.nav-list-item:nth-child({{ nav_levels[1] }}) > ul.nav-list
{%- if nav_levels[2] %},
{{ activation_collection_prefix }} > li.nav-list-item:nth-child({{ nav_levels[1] }}) > ul.nav-list > li.nav-list-item:nth-child({{ nav_levels[2] }}) > ul.nav-list
{%- endif %} {
  display: block;
}

{%- endif -%}
{%- endif -%}
{%- endif -%}
